{"version":3,"file":"security-checks.js","sourceRoot":"","sources":["security-checks.ts"],"names":[],"mappings":"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","sourcesContent":["import { SecurityCheck, SecurityCheckResult, SecurityHeaders, NodeSecurityConfig, ConfigFile, NpmAuditResponse, NvdVulnerability } from './types';\nimport { VulnerabilityService } from './vulnerability-service';\n\nimport { execSync } from 'child_process';\nimport { readFileSync } from 'fs';\n\nexport class SecurityHeadersCheck implements SecurityCheck {\n    name = 'Security Headers Validation';\n\n    async run(): Promise<SecurityCheckResult> {\n        try {\n            const headers: SecurityHeaders = {\n                'X-Content-Type-Options': 'nosniff',\n                'X-Frame-Options': 'DENY',\n                'X-XSS-Protection': '1; mode=block',\n                'Content-Security-Policy': \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self'; frame-src 'self'; font-src 'self'; object-src 'none'; media-src 'self' data:;\",\n                'Referrer-Policy': 'strict-origin-when-cross-origin',\n                'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\n                'Permissions-Policy': 'geolocation=(), microphone=(), camera=()'\n            };\n\n            const checks = [\n                { header: 'X-Content-Type-Options', value: 'nosniff' },\n                { header: 'X-Frame-Options', value: 'DENY' },\n                { header: 'X-XSS-Protection', value: '1; mode=block' },\n                { header: 'Content-Security-Policy', value: headers['Content-Security-Policy'] },\n                { header: 'Referrer-Policy', value: 'strict-origin-when-cross-origin' },\n                { header: 'Strict-Transport-Security', value: 'max-age=31536000; includeSubDomains' },\n                { header: 'Permissions-Policy', value: 'geolocation=(), microphone=(), camera=()' }\n            ];\n\n            const results = checks.map(check => ({\n                header: check.header,\n                expected: check.value,\n                actual: headers[check.header],\n                valid: headers[check.header] === check.value\n            }));\n\n            const valid = results.every(r => r.valid);\n            return {\n                name: this.name,\n                valid,\n                errors: valid ? [] : results.filter(r => !r.valid).map(r => `${r.header} has incorrect value: expected ${r.expected}, got ${r.actual}`),\n                configFiles: []\n            };\n        } catch (error) {\n            return {\n                name: this.name,\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error'],\n                configFiles: []\n            };\n        }\n    }\n}\n\nexport class DependencyCheck implements SecurityCheck {\n    name = 'Dependency Vulnerability Scan';\n    private vulnerabilityService = VulnerabilityService.getInstance();\n\n    async run(): Promise<SecurityCheckResult> {\n        try {\n            // Get npm audit vulnerabilities\n            const npmAuditResult = await execSync('npm audit --json', { encoding: 'utf-8' });\n            const npmAudit: NpmAuditResponse = JSON.parse(npmAuditResult);\n            const npmVulnerabilities: NvdVulnerability[] = [];\n\n            if (npmAudit.advisories) {\n                Object.values(npmAudit.advisories).forEach(advisory => {\n                    const vuln: NvdVulnerability = {\n                        id: `npm-${advisory.id}`,\n                        name: advisory.module_name,\n                        version: advisory.vulnerable_versions,\n                        severity: advisory.severity as 'critical' | 'high' | 'medium' | 'low',\n                        description: advisory.overview,\n                        references: advisory.references || [],\n                        published: new Date().toISOString(),\n                        lastModified: new Date().toISOString(),\n                        cvssScore: advisory.severity === 'critical' ? 9.0 : advisory.severity === 'high' ? 7.0 : advisory.severity === 'medium' ? 5.0 : 3.0,\n                        vectorString: advisory.vector_string || 'N/A',\n                        affectedVersions: [advisory.vulnerable_versions]\n                    };\n                    npmVulnerabilities.push(vuln);\n                });\n            }\n\n            // Get NVD vulnerabilities\n            const packageList = JSON.parse(execSync('npm list --json', { encoding: 'utf-8' })) as { dependencies: Record<string, { version: string }> };\n            const dependencies = Object.entries(packageList.dependencies || {}).reduce((acc, [name, info]) => {\n                if (info.version) {\n                    acc[name] = info.version;\n                }\n                return acc;\n            }, {} as Record<string, string>);\n\n            const nvdVulnerabilities = await this.vulnerabilityService.checkPackageDependenciesVulnerabilities(dependencies);\n\n            // Get Node.js vulnerabilities\n            const nodeVulnerabilities = await this.vulnerabilityService.checkNodeVersionVulnerabilities(process.version);\n\n            // Get Electron vulnerabilities\n            const electronVulnerabilities = await this.vulnerabilityService.checkElectronVersionVulnerabilities(process.versions.electron);\n\n            // Combine all vulnerabilities and deduplicate\n            const allVulnerabilities = [...npmVulnerabilities, ...nvdVulnerabilities, ...nodeVulnerabilities, ...electronVulnerabilities];\n            const uniqueVulnerabilities = Array.from(new Map(\n                allVulnerabilities.map(vuln => [vuln.id, vuln])\n            ).values());\n\n            return {\n                name: this.name,\n                valid: uniqueVulnerabilities.length === 0,\n                errors: uniqueVulnerabilities.map(v => v.description),\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error scanning dependencies:', error);\n            return {\n                name: this.name,\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Failed to scan dependencies'],\n                configFiles: []\n            };\n        }\n    }\n}\n\nexport class NodeSecurityCheck implements SecurityCheck {\n    name = 'Node.js Security Configuration';\n\n    async run(): Promise<SecurityCheckResult> {\n        try {\n            const nodeVersion = process.version;\n            const securityConfig: NodeSecurityConfig = {\n                version: nodeVersion,\n                security: {\n                    strictSSL: true,\n                    enableSourceMaps: true,\n                    enableExperimentalFeatures: false,\n                    maxOldSpaceSize: 4096\n                },\n                audit: true\n            };\n\n            const checks = [\n                { property: 'strictSSL', expected: true },\n                { property: 'enableSourceMaps', expected: true },\n                { property: 'enableExperimentalFeatures', expected: false },\n                { property: 'maxOldSpaceSize', expected: 4096 },\n                { property: 'audit', expected: true }\n            ];\n\n            const results = checks.map(check => ({\n                property: check.property,\n                expected: check.expected,\n                actual: securityConfig.security[check.property],\n                valid: securityConfig.security[check.property] === check.expected\n            }));\n\n            const valid = results.every(r => r.valid);\n            return {\n                name: this.name,\n                valid,\n                errors: valid ? [] : results.filter(r => !r.valid).map(r => `${r.property} has incorrect value: expected ${r.expected}, got ${r.actual}`),\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error checking Node.js configuration:', error);\n            return {\n                name: this.name,\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Failed to check Node.js configuration'],\n                configFiles: []\n            };\n        }\n    }\n}\n\nexport class ElectronSecurityCheck implements SecurityCheck {\n    name = 'Electron Security';\n    private vulnerabilityService = VulnerabilityService.getInstance();\n\n    async run(): Promise<SecurityCheckResult> {\n        try {\n            const nodeVersionCheck = await this.checkNodeVersion();\n            const electronVersionCheck = await this.checkElectronVersion();\n            const packageDependenciesCheck = await this.checkPackageDependencies();\n\n            const valid = nodeVersionCheck.valid && electronVersionCheck.valid && packageDependenciesCheck.valid;\n            const errors = [...nodeVersionCheck.errors, ...electronVersionCheck.errors, ...packageDependenciesCheck.errors];\n\n            return {\n                name: this.name,\n                valid,\n                errors,\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error running security checks:', error);\n            return {\n                name: this.name,\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error'],\n                configFiles: []\n            };\n        }\n    }\n\n    private async checkNodeVersion(): Promise<SecurityCheckResult> {\n        try {\n            const version = process.version;\n            const vulnerabilities = await this.vulnerabilityService.checkNodeVersionVulnerabilities(version);\n            return {\n                name: 'Node.js Version',\n                valid: vulnerabilities.length === 0,\n                errors: vulnerabilities.map(v => v.description),\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error checking Node.js version:', error);\n            return {\n                name: 'Node.js Version',\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error'],\n                configFiles: []\n            };\n        }\n    }\n\n    private async checkElectronVersion(): Promise<SecurityCheckResult> {\n        try {\n            const version = process.versions.electron;\n            const vulnerabilities = await this.vulnerabilityService.checkElectronVersionVulnerabilities(version);\n            return {\n                name: 'Electron Version',\n                valid: vulnerabilities.length === 0,\n                errors: vulnerabilities.map(v => v.description),\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error checking Electron version:', error);\n            return {\n                name: 'Electron Version',\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error'],\n                configFiles: []\n            };\n        }\n    }\n\n    private async checkPackageDependencies(): Promise<SecurityCheckResult> {\n        try {\n            const result = execSync('npm list --json', { encoding: 'utf-8' });\n            const packageList = JSON.parse(result);\n            const dependencies: Record<string, string> = {};\n\n            const processDependencies = (deps: Record<string, any>, path: string[] = []): void => {\n                for (const [name, info] of Object.entries(deps)) {\n                    const currentPath = [...path, name];\n                    const version = info.version;\n                    if (version) {\n                        dependencies[name] = version;\n                    }\n                    if (info.dependencies) {\n                        processDependencies(info.dependencies, currentPath);\n                    }\n                }\n            };\n\n            processDependencies(packageList.dependencies || {});\n\n            const vulnerabilities = await this.vulnerabilityService.checkPackageDependenciesVulnerabilities(dependencies);\n            return {\n                name: 'Package Dependencies',\n                valid: vulnerabilities.length === 0,\n                errors: vulnerabilities.map(v => v.description),\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error checking package dependencies:', error);\n            return {\n                name: 'Package Dependencies',\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error'],\n                configFiles: []\n            };\n        }\n    }\n}\n\nexport class ConfigFileValidationCheck implements SecurityCheck {\n    name = 'Configuration File Validation';\n    private vulnerabilityService: VulnerabilityService;\n\n    constructor(vulnerabilityService: VulnerabilityService) {\n        this.vulnerabilityService = vulnerabilityService;\n    }\n\n    async run(): Promise<SecurityCheckResult> {\n        try {\n            const configFiles: ConfigFile[] = [];\n            const paths = ['package.json', 'package-lock.json', 'tsconfig.json', '.env'];\n\n            for (const path of paths) {\n                try {\n                    const fileContent = readFileSync(path, 'utf-8');\n                    if (path.endsWith('.json')) {\n                        JSON.parse(fileContent);\n                    }\n                    configFiles.push({ path, valid: true });\n                } catch (error) {\n                    configFiles.push({ path, valid: false, errors: [error instanceof Error ? error.message : 'Invalid file format'] });\n                }\n            }\n\n            const packageDependenciesCheck = await this.checkPackageDependencies();\n            configFiles.push({\n                path: 'package.json',\n                valid: packageDependenciesCheck.valid,\n                errors: packageDependenciesCheck.errors\n            });\n\n            const invalidFiles = configFiles.filter(f => !f.valid);\n\n            return {\n                name: this.name,\n                valid: invalidFiles.length === 0,\n                errors: invalidFiles.map(f => `Invalid configuration file: ${f.path}`),\n                configFiles\n            };\n        } catch (error) {\n            console.error('Error validating configuration files:', error);\n            return {\n                name: this.name,\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error']\n            };\n        }\n    }\n\n    private async checkPackageDependencies(): Promise<SecurityCheckResult> {\n        try {\n            const result = execSync('npm list --json', { encoding: 'utf-8' });\n            const packageList = JSON.parse(result);\n            const dependencies: Record<string, string> = {};\n\n            const processDependencies = (deps: Record<string, any>, path: string[] = []): void => {\n                for (const [name, info] of Object.entries(deps)) {\n                    const currentPath = [...path, name];\n                    const version = info.version;\n                    if (version) {\n                        dependencies[name] = version;\n                    }\n                    if (info.dependencies) {\n                        processDependencies(info.dependencies, currentPath);\n                    }\n                }\n            };\n\n            processDependencies(packageList.dependencies || {});\n\n            const vulnerabilities = await this.vulnerabilityService.checkPackageDependenciesVulnerabilities(dependencies);\n            return {\n                name: 'Package Dependencies',\n                valid: vulnerabilities.length === 0,\n                errors: vulnerabilities.map(v => v.description),\n                configFiles: []\n            };\n        } catch (error) {\n            console.error('Error checking package dependencies:', error);\n            return {\n                name: 'Package Dependencies',\n                valid: false,\n                errors: [error instanceof Error ? error.message : 'Unknown error'],\n                configFiles: []\n            };\n        }\n    }\n}\n"]}