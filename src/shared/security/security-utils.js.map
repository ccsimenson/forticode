{"version":3,"file":"security-utils.js","sourceRoot":"","sources":["security-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { SecurityScanResult } from './types.js';\n\nexport class SecurityUtils {\n    /**\n     * Generate a human-readable report from scan results\n     */\n    static generateReport(results: SecurityScanResult): string {\n        let report = `# Security Scan Report - ${results.timestamp.toLocaleString()}\n\n## Summary\n- Total Checks: ${results.checks.length}\n- Passed: ${results.checks.filter(c => c.status === 'PASS').length}\n- Failed: ${results.checks.filter(c => c.status === 'FAIL').length}\n- Errors: ${results.checks.filter(c => c.status === 'ERROR').length}\n\n## Detailed Results\n\n`;\n\n        for (const check of results.checks) {\n            report += `### ${check.name} - ${check.status}\\n`;\n            \n            if (check.status === 'ERROR') {\n                report += `Error: ${check.result.details['error']}\\n\\n`;\n            } else {\n                const details = check.result.details;\n                if (details) {\n                    for (const [key, value] of Object.entries(details)) {\n                        if (typeof value === 'object') {\n                            report += `#### ${key}\\n`;\n                            if (value) {\n                                for (const [subKey, subValue] of Object.entries(value)) {\n                                    report += `- ${subKey}: ${subValue}\\n`;\n                                }\n                                report += '\\n';\n                            }\n                        } else {\n                            report += `- ${key}: ${value}\\n`;\n                        }\n                    }\n                }\n            }\n            report += '\\n';\n        }\n\n        return report;\n    }\n\n    /**\n     * Get overall security score (0-100)\n     */\n    static getSecurityScore(results: SecurityScanResult): number {\n        const totalChecks = results.checks.length;\n        const passedChecks = results.checks.filter(c => c.status === 'PASS').length;\n        const errorChecks = results.checks.filter(c => c.status === 'ERROR').length;\n\n        // Calculate base score (0-100)\n        let score = (passedChecks / totalChecks) * 100;\n\n        // Penalize for errors\n        if (errorChecks > 0) {\n            score -= (errorChecks / totalChecks) * 50; // Each error reduces score by 50%\n        }\n\n        return Math.max(0, Math.min(100, Math.round(score)));\n    }\n\n    /**\n     * Get critical vulnerabilities from scan results\n     */\n    static getCriticalVulnerabilities(results: SecurityScanResult): any[] {\n        const vulnerabilities: any[] = [];\n        for (const check of results.checks) {\n            if (check.name === 'Dependency Vulnerability Scan' && check.status === 'FAIL') {\n                const details = check.result.details;\n                if (details && details['vulnerabilities'] && Array.isArray(details['vulnerabilities'])) {\n                    vulnerabilities.push(...details['vulnerabilities'].filter((v: any) => v.severity === 'critical'));\n                }\n            }\n        }\n        return vulnerabilities;\n    }\n}\n"]}