{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["export interface ConfigFile {\n    path: string;\n    valid: boolean;\n    errors?: string[];\n}\n\nexport interface SecurityCheck {\n    name: string;\n    run(): Promise<SecurityCheckResult>;\n}\n\nexport interface SecurityCheckResult {\n    name: string;\n    valid: boolean;\n    errors: string[];\n    configFiles?: ConfigFile[];\n    details?: any;\n}\n\nexport interface SecurityScanResult {\n    timestamp: Date;\n    checks: Array<{\n        name: string;\n        result: SecurityCheckResult;\n        status: 'PASS' | 'FAIL' | 'ERROR';\n    }>;\n}\n\nexport interface NvdVulnerability {\n    id: string;\n    name: string;\n    version: string;\n    severity: 'critical' | 'high' | 'medium' | 'low';\n    description: string;\n    references: string[];\n    published: string;\n    lastModified: string;\n    cvssScore: number;\n    vectorString: string;\n    affectedVersions: string[];\n    path?: string;\n}\n\nexport interface CheckResult {\n    check: string;\n    result: 'PASS' | 'FAIL' | 'ERROR';\n    details: {\n        version?: string;\n        vulnerabilities?: Array<{\n            id: string;\n            severity: string;\n            description: string;\n            cvssScore: number;\n        }>;\n        errors?: string[];\n    };\n}\n\nexport interface NpmAuditAdvisory {\n    id: string;\n    title: string;\n    module_name: string;\n    vulnerable_versions: string;\n    severity: 'critical' | 'high' | 'medium' | 'low';\n    overview: string;\n    references: string[];\n    url?: string;\n    cvss_score?: number;\n    vector_string?: string;\n}\n\nexport interface NpmAuditResponse {\n    advisories: Record<string, NpmAuditAdvisory>;\n    metadata: {\n        vulnerabilities: {\n            info: number;\n            low: number;\n            moderate: number;\n            high: number;\n            critical: number;\n            total: number;\n        };\n        dependencies: {\n            prod: number;\n            dev: number;\n            optional: number;\n            total: number;\n        };\n    };\n}\n\nexport interface SecurityHeaders {\n    'X-Content-Type-Options': string;\n    'X-Frame-Options': string;\n    'X-XSS-Protection': string;\n    'Content-Security-Policy': string;\n    [key: string]: string;\n}\n\nexport interface NodeSecurityConfig {\n    version: string;\n    security: {\n        strictSSL: boolean;\n        [key: string]: any;\n    };\n    audit: boolean;\n}\n\nexport interface ElectronSecurityConfig {\n    contextIsolation: boolean;\n    nodeIntegration: boolean;\n    sandbox: boolean;\n    webSecurity: boolean;\n    allowRunningInsecureContent: boolean;\n    webviewTag: boolean;\n    protocolHandlers: string[];\n    ipcMain: {\n        allow: string[];\n        block: string[];\n    };\n    fileSystemAccess: {\n        allow: string[];\n        block: string[];\n        pathTraversalProtection: boolean;\n        sanitizePaths: boolean;\n        requirePermissions: boolean;\n        permissionCheckInterval: number;\n        restrictedDirs: string[];\n        allowUserDirs: boolean;\n        allowedFileTypes: string[];\n        blockedFileTypes: string[];\n        watchdogEnabled: boolean;\n        watchdogInterval: number;\n        watchdogLogPath: string;\n        audit: {\n            enabled: boolean;\n            logPath: string;\n            retentionDays: number;\n        };\n        requireEncryption: boolean;\n        encryptionAlgorithm: string;\n        keyRotationInterval: number;\n        backup: {\n            enabled: boolean;\n            interval: number;\n            retentionDays: number;\n        };\n        recovery: {\n            enabled: boolean;\n            maxAttempts: number;\n            retryDelay: number;\n        };\n    };\n}\n\nexport interface ConfigFile {\n    path: string;\n    valid: boolean;\n    errors?: string[];\n}\n"]}