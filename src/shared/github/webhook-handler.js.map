{"version":3,"file":"webhook-handler.js","sourceRoot":"","sources":["webhook-handler.ts"],"names":[],"mappings":"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","sourcesContent":["import { \n  GitHubWebhookPayload, \n  GitHubPullRequestPayload, \n  GitHubPushPayload, \n  GitHubIssuePayload,\n  GitHubEventHandlers\n} from './types';\n\n/**\n * Handles incoming GitHub webhook events\n */\nexport class WebhookHandler {\n  private eventHandlers: GitHubEventHandlers = {};\n\n  /**\n   * Register an event handler\n   * @param event - The GitHub event name\n   * @param handler - The handler function\n   */\n  on<T extends keyof GitHubEventHandlers>(\n    event: T,\n    handler: NonNullable<GitHubEventHandlers[T]>\n  ): void {\n    this.eventHandlers[event] = handler;\n  }\n\n  /**\n   * Handle a GitHub webhook event\n   * @param event - The GitHub event name (e.g., 'pull_request', 'push', 'issues')\n   * @param payload - The webhook payload\n   */\n  async handleEvent(event: string, payload: GitHubWebhookPayload): Promise<void> {\n    try {\n      const handler = this.eventHandlers[event];\n      if (handler) {\n        await handler(payload as any);\n      } else {\n        console.log(`No handler registered for event: ${event}`);\n      }\n    } catch (error) {\n      console.error(`Error handling ${event} event:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Handle pull request events\n   * @param payload - The pull request webhook payload\n   */\n  async handlePullRequest(payload: GitHubPullRequestPayload): Promise<void> {\n    const handler = this.eventHandlers.pull_request;\n    if (handler) {\n      await handler(payload);\n    } else {\n      console.log('No pull request handler registered');\n    }\n  }\n\n  /**\n   * Handle push events\n   * @param payload - The push webhook payload\n   */\n  async handlePush(payload: GitHubPushPayload): Promise<void> {\n    const handler = this.eventHandlers.push;\n    if (handler) {\n      await handler(payload);\n    } else {\n      console.log('No push handler registered');\n    }\n  }\n\n  /**\n   * Handle issue events\n   * @param payload - The issue webhook payload\n   */\n  async handleIssue(payload: GitHubIssuePayload): Promise<void> {\n    const handler = this.eventHandlers.issues;\n    if (handler) {\n      await handler(payload);\n    } else {\n      console.log('No issue handler registered');\n    }\n    // Add issue handling logic here\n  }\n}\n\n// Export a default instance\nexport const webhookHandler = new WebhookHandler();\n\n/**\n * Runs security checks on the given commit SHA\n * @param _commitSha - The commit SHA to check (currently unused)\n * @returns A promise that resolves to an array of security issues\n */\nasync function runSecurityChecks(_commitSha: string): Promise<Array<{\n  id: string;\n  severity: 'high' | 'medium' | 'low';\n  message: string;\n  file?: string;\n  line?: number;\n}>> {\n  // TODO: Implement actual security checks\n  // This is a placeholder for now\n  return [];\n}\n\n/**\n * Generates a markdown report from security check results\n * @param checks - Array of security check results\n * @returns A markdown formatted report string\n */\nfunction generateSecurityReport(checks: Array<{\n  id: string;\n  severity: 'high' | 'medium' | 'low';\n  message: string;\n  file?: string;\n  line?: number;\n}>): string {\n  if (checks.length === 0) {\n    return '## ‚úÖ No security issues found!\\n\\n' +\n           'The security scan completed successfully and no issues were detected.';\n  }\n\n  let report = '## üîç Security Scan Results\\n\\n' +\n              `Found ${checks.length} potential security issue${checks.length > 1 ? 's' : ''}:\\n\\n`;\n\n  const bySeverity = {\n    high: checks.filter(check => check.severity === 'high'),\n    medium: checks.filter(check => check.severity === 'medium'),\n    low: checks.filter(check => check.severity === 'low')\n  };\n\n  const severityEmoji = {\n    high: 'üî¥',\n    medium: 'üü†',\n    low: 'üîµ'\n  };\n\n  (['high', 'medium', 'low'] as const).forEach(severity => {\n    const issues = bySeverity[severity];\n    if (issues.length > 0) {\n      report += `\\n### ${severityEmoji[severity]} ${severity.charAt(0).toUpperCase() + severity.slice(1)} Severity (${issues.length})\\n\\n`;\n      issues.forEach(issue => {\n        report += `- ${issue.message}`;\n        if (issue.file) {\n          report += ` in \\`${issue.file}${issue.line ? `:${issue.line}` : ''}\\``;\n        }\n        report += '\\n';\n      });\n    }\n  });\n\n  report += '\\n---\\n';\n  report += '> ‚ÑπÔ∏è This is an automated security scan. ' +\n           'Please review these findings and address any issues as needed.';\n\n  return report;\n}\n\n// Export utility functions for testing and external use\nexport { runSecurityChecks, generateSecurityReport };\n"]}